{"ast":null,"code":"var _jsxFileName = \"/Users/kerrinkg/Desktop/Food order app/food-order/src/store/BasketProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport BasketContext from './basket-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultBasketState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst basketReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    /* concat updates and returns new state obj */\n\n    const updatedTotal = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotal\n    };\n  }\n\n  return defaultBasketState;\n};\n\nconst BasketProvider = props => {\n  _s();\n\n  const [basketState, dispatchBasketAction] = useReducer(basketReducer, defaultBasketState);\n\n  const addToBasketHandler = item => {\n    dispatchBasketAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeFromBasketHanlder = id => {\n    dispatchBasketAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const basketContext = {\n    items: basketState.items,\n    totalAmount: basketState.totalAmount,\n    addItem: addToBasketHandler,\n    removeItem: removeFromBasketHanlder\n  };\n  return /*#__PURE__*/_jsxDEV(BasketContext.Provider, {\n    value: basketContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasketProvider, \"vHf++TZn66NScWTCtSTEYNDIpa4=\");\n\n_c = BasketProvider;\nexport default BasketProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasketProvider\");","map":{"version":3,"sources":["/Users/kerrinkg/Desktop/Food order app/food-order/src/store/BasketProvider.js"],"names":["useReducer","BasketContext","defaultBasketState","items","totalAmount","basketReducer","state","action","type","updatedItems","concat","item","updatedTotal","price","amount","BasketProvider","props","basketState","dispatchBasketAction","addToBasketHandler","removeFromBasketHanlder","id","basketContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,KAAK,EAAE,EADkB;AAEzBC,EAAAA,WAAW,EAAE;AAFY,CAA3B;;AAKA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CACnBH,MAAM,CAACI,IADY,CAArB;AAEG;;AACH,UAAMC,YAAY,GAChBN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MADtD;AAEA,WAAO;AACLX,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AACD,SAAOV,kBAAP;AACD,CAbD;;AAeA,MAAMa,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAM,CAACC,WAAD,EAAcC,oBAAd,IAAsClB,UAAU,CACpDK,aADoD,EAEpDH,kBAFoD,CAAtD;;AAKA,QAAMiB,kBAAkB,GAAIR,IAAD,IAAU;AACnCO,IAAAA,oBAAoB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAApB;AACD,GAFD;;AAIA,QAAMS,uBAAuB,GAAIC,EAAD,IAAQ;AACtCH,IAAAA,oBAAoB,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBa,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAApB;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG;AACpBnB,IAAAA,KAAK,EAAEc,WAAW,CAACd,KADC;AAEpBC,IAAAA,WAAW,EAAEa,WAAW,CAACb,WAFL;AAGpBmB,IAAAA,OAAO,EAAEJ,kBAHW;AAIpBK,IAAAA,UAAU,EAAEJ;AAJQ,GAAtB;AAOA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEE,aAA/B;AAAA,cACGN,KAAK,CAACS;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA1BD;;GAAMV,c;;KAAAA,c;AA4BN,eAAeA,cAAf","sourcesContent":["import { useReducer } from 'react';\nimport BasketContext from './basket-context';\n\nconst defaultBasketState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst basketReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(\n      action.item\n    ); /* concat updates and returns new state obj */\n    const updatedTotal =\n      state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotal,\n    };\n  }\n  return defaultBasketState;\n};\n\nconst BasketProvider = (props) => {\n  const [basketState, dispatchBasketAction] = useReducer(\n    basketReducer,\n    defaultBasketState\n  );\n\n  const addToBasketHandler = (item) => {\n    dispatchBasketAction({ type: 'ADD', item: item });\n  };\n\n  const removeFromBasketHanlder = (id) => {\n    dispatchBasketAction({ type: 'REMOVE', id: id });\n  };\n\n  const basketContext = {\n    items: basketState.items,\n    totalAmount: basketState.totalAmount,\n    addItem: addToBasketHandler,\n    removeItem: removeFromBasketHanlder,\n  };\n\n  return (\n    <BasketContext.Provider value={basketContext}>\n      {props.children}\n    </BasketContext.Provider>\n  );\n};\n\nexport default BasketProvider;\n"]},"metadata":{},"sourceType":"module"}