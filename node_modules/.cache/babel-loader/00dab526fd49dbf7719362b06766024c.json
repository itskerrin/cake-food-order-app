{"ast":null,"code":"var _jsxFileName = \"/Users/kerrinkg/Desktop/Food order app/food-order/src/store/BasketProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport BasketContext from './basket-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultBasketState = {\n  items: [],\n  totalAmount: 0\n};\n/* \nconst basketReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotal =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const existingBaksetItemIndex = state.items.findIndex(\n      (item) => item === action.item.id\n    );\n\n    const existingBasketItem = state.items[existingBaksetItemIndex];\n    let updatedItems;\n\n    if (existingBasketItem) {\n      const updatedItem = {\n        ...existingBasketItem,\n        amount: existingBasketItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingBaksetItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(\n        action.item\n      ); /* concat updates and returns new state obj \n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotal,\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingBaksetItemIndex = state.items.findIndex()\n}\n  return defaultBasketState;\n}; */\n\nconst basketReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingBasketItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingBasketItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingBasketItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingBasketItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingBasketItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingBasketItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultBasketState;\n};\n\nconst BasketProvider = props => {\n  _s();\n\n  const [basketState, dispatchBasketAction] = useReducer(basketReducer, defaultBasketState);\n\n  const addToBasketHandler = item => {\n    dispatchBasketAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeFromBasketHanlder = id => {\n    dispatchBasketAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const basketContext = {\n    items: basketState.items,\n    totalAmount: basketState.totalAmount,\n    addItem: addToBasketHandler,\n    removeItem: removeFromBasketHanlder\n  };\n  return /*#__PURE__*/_jsxDEV(BasketContext.Provider, {\n    value: basketContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasketProvider, \"vHf++TZn66NScWTCtSTEYNDIpa4=\");\n\n_c = BasketProvider;\nexport default BasketProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasketProvider\");","map":{"version":3,"sources":["/Users/kerrinkg/Desktop/Food order app/food-order/src/store/BasketProvider.js"],"names":["useReducer","BasketContext","defaultBasketState","items","totalAmount","basketReducer","state","action","type","updatedTotalAmount","item","price","amount","existingBasketItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","BasketProvider","props","basketState","dispatchBasketAction","addToBasketHandler","removeFromBasketHanlder","basketContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import { useReducer } from 'react';\nimport BasketContext from './basket-context';\n\nconst defaultBasketState = {\n  items: [],\n  totalAmount: 0,\n};\n\n/* \nconst basketReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotal =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const existingBaksetItemIndex = state.items.findIndex(\n      (item) => item === action.item.id\n    );\n\n    const existingBasketItem = state.items[existingBaksetItemIndex];\n    let updatedItems;\n\n    if (existingBasketItem) {\n      const updatedItem = {\n        ...existingBasketItem,\n        amount: existingBasketItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingBaksetItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(\n        action.item\n      ); /* concat updates and returns new state obj \n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotal,\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingBaksetItemIndex = state.items.findIndex()\n}\n  return defaultBasketState;\n}; */\n\nconst basketReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    const existingBasketItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCartItem = state.items[existingBasketItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingBasketItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === 'REMOVE') {\n    const existingBasketItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingBasketItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\n      updatedItems = [...state.items];\n      updatedItems[existingBasketItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n\n  return defaultBasketState;\n};\n\nconst BasketProvider = (props) => {\n  const [basketState, dispatchBasketAction] = useReducer(\n    basketReducer,\n    defaultBasketState\n  );\n\n  const addToBasketHandler = (item) => {\n    dispatchBasketAction({ type: 'ADD', item: item });\n  };\n\n  const removeFromBasketHanlder = (id) => {\n    dispatchBasketAction({ type: 'REMOVE', id: id });\n  };\n\n  const basketContext = {\n    items: basketState.items,\n    totalAmount: basketState.totalAmount,\n    addItem: addToBasketHandler,\n    removeItem: removeFromBasketHanlder,\n  };\n\n  return (\n    <BasketContext.Provider value={basketContext}>\n      {props.children}\n    </BasketContext.Provider>\n  );\n};\n\nexport default BasketProvider;\n"]},"metadata":{},"sourceType":"module"}